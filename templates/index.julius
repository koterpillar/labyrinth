$(document).ready(function () {
    var gameId = null;
    var gameLength = 0;
    var templates = {};

    function apply_template(tmpl, data, where) {
        var result = tmpl(data);
        if (typeof where == "function") {
            where(result);
        } else {
            $(where).html(result);
        }
    }

    function template(path, data, callback) {
        if (templates[path]) {
            apply_template(templates[path], data, callback);
        } else {
            $.get(path, function (response) {
                var tmpl = Handlebars.compile(response);
                templates[path] = tmpl;
                apply_template(templates[path], data, callback);
            });
        }
    }

    function privateMove(move) {
        return (/^(choose|reorder)/).test(move);
    }

    function wsURL(url) {
        return decodeURI($('<a href="' + url + '"/>')[0].href.replace(/^http/, "ws"));
    }

    function wsResult(data) {
        if (data.data) {
            return JSON.parse(data.data);
        } else {
            return data;
        }
    }

    function Stream(address) {
        this.onMessage = function () {};
        this.onClose = function () {};

        this.address = address;

        this.start = function () {
            if (!this.socket) {
                var self = this;
                $.ajax({
                    url: this.address,
                    context: this
                }).done(this.onMessage);
                this.socket = new WebSocket(wsURL(this.address));
                this.socket.onmessage = function (msg) {
                    self.onMessage(JSON.parse(msg.data));
                };
            }
        };

        this.stop = function () {
            if (this.socket) {
                this.socket.close();
                this.socket = null;
                this.onClose();
            }
        };
    }

    var listStream = new Stream('@{GamesR}');

    listStream.onMessage = function (gameList) {
        template('@{StaticR templates_game_list_html}', gameList, '#games');
    }

    var logStream = new Stream();

    logStream.onClose = function () {
        gameLength = 0;
    };

    logStream.onMessage = function (result) {
        template('@{StaticR templates_game_log_html}', result, function(html) {
            if (result.log.length > gameLength) {
                $('#history').html(html);
            }
            scrollDown();
            gameLength = result.log.length;

            var player_input = $('#make_move_player');
            if (player_input.val() === "" ||
                $('#make_move_hotseat').is(':checked')
            ) {
                player_input.val(result.game.currentTurn);
            }
            player_input.attr('max', result.game.players - 1);
        });
    }

    $('#add_game').submit(function () {
        var form = $(this);
        $.post('@{NewGameR}', form.serializeArray());
        return false;
    });

    function loadPage() {
        // TODO: better client-side routing?
        gameId = window.location.hash.replace(/^#/, '');
        if (gameId) {
            listStream.stop();
            logStream.address = '/game/' + gameId;
            logStream.start();

            $('#game_log').show();
            $('#games_container').hide();
        } else {
            logStream.stop();
            listStream.start();

            $('#game_log').hide();
            $('#games_container').show();
        }
    }

    function scrollDown() {
        var game_content = $('#history');
        if (game_content.is(':visible')) {
            var totalHeight  = window.innerHeight;
            var headerHeight = $('.header:visible').outerHeight(true);
            var footerHeight = $('.footer:visible').outerHeight(true);
            var resultHeight = totalHeight - headerHeight - footerHeight;
            game_content.outerHeight(resultHeight);
            game_content.scrollTop(game_content.prop('scrollHeight'));
        }
    }

    $(window).resize(scrollDown);
    $(window).trigger('resize');

    function randomPercent() {
        var val = Math.random() * 100;
        return Math.round(val) + '%';
    }

    var obscureMoveDiv = null;
    function obscureMove() {
        var input = $('#make_move_move');
        var move = input.val();
        if (privateMove(input.val()) && $('#make_move_hotseat').is(':checked')) {
            if (obscureMoveDiv === null) {
                obscureMoveDiv = $('<div />');
                obscureMoveDiv.addClass('obscureMove');
                $('#make_move').after(obscureMoveDiv);
                obscureMoveDiv.offset(input.offset());
                obscureMoveDiv.width(input.outerWidth());
                obscureMoveDiv.height(input.outerHeight());
            }
            obscureMoveDiv.css('background-position',
                randomPercent() + ' ' + randomPercent());
        } else {
            if (obscureMoveDiv !== null) {
                obscureMoveDiv.remove();
                obscureMoveDiv = null;
            }
        }
    }

    $('#make_move_move').keydown(obscureMove);
    $('#make_move_move').keyup(obscureMove);
    $('#make_move_move').change(obscureMove);
    $('#make_move_hotseat').change(obscureMove);

    function ajax_submit(callback) {
        var form = $(this);
        if (!callback) {
            callback = function () {};
        }
        $.ajax(form.attr('action'), {
            data: form.serialize(),
            method: form.data('method'),
            success: callback,
        });
        return false;
    }

    $(document).on('click', 'form[data-ajax]', ajax_submit);

    $('#make_move').submit(function () {
        var form = $(this);
        form.attr('action', '/game/' + gameId + '/move');
        scrollDown();
        return ajax_submit.call(form, function () {
            $('#make_move_move').val('');
            $('#make_move_move').focus();
            obscureMove();
            scrollDown();
        });
    });

    function hidePopup(link) {
        var popup = link.data('popup');
        if (popup) {
            popup.detach();
        }
        link.data('open', false);
    }

    function showPopup(link) {
        var popup = link.data('popup');
        if (!popup) {
            popup = $('<div class="popup"></div>');
            template(link.data('template'), link.data('json'), popup);
            link.data('popup', popup);
        }
        popup.insertAfter(link);
        link.data('open', true);
    }

    function togglePopup() {
        var link = $(this);
        if (link.data('open')) {
            hidePopup(link);
        } else {
            if (link.data('json')) {
                showPopup(link);
            } else {
                $.getJSON($(this).attr('href'), function (text) {
                    link.data('json', text);
                    showPopup(link);
                });
            }
        }
        return false;
    }

    $('.popup-link').click(togglePopup);

    loadPage();
    $(window).on('hashchange', function () {
        loadPage();
    });
});
